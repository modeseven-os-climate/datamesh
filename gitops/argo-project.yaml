apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: datamesh-argocd
  namespace: datamesh-argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'
  destinations:
    - name: '*'
      namespace: datamesh-demo
      server: '*'
    - name: '*'
      namespace: datamesh-argocd
      server: '*'
  sourceRepos:
    - '*'
  sourceNamespaces:
  - '*'
  applicationSources:
    - cluster: '*'
      namespace: datamesh-demo
    - cluster: '*'
      namespace: datamesh-argocd
# spec:
#   applicationSources:
#     - cluster: '*'
#       namespace: '*'
#   sourceRepos:
#   - '*'
#   destinations:
#   - namespace: '*'
#     server: '*'
#   clusterResourceWhitelist:
#   - group: '*'
#     kind: '*'
#   sourceNamespaces:
#   - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-application-controller-clusterrole
rules:
- apiGroups: [""]
  resources: ["*",]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# For a ClusterRoleBinding (cluster-wide)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-application-controller-clusterrolebinding
  namespace: datamesh-argocd
subjects:
- kind: ServiceAccount
  name: datamesh-ci-cd-argocd-application-controller
  namespace: datamesh-argocd
roleRef:
  kind: ClusterRole
  name: argocd-application-controller-clusterrole
  apiGroup: rbac.authorization.k8s.io
